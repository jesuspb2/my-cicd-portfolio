name: Deploy SPA to DEV (auto)

on:
  push:
    branches: [main, dev]

permissions:
  id-token: write
  contents: read

env:
  ENV:                    ${{ vars.ENV }}
  APP_NAME:               ${{ vars.APP_NAME }}
  AWS_REGION:             ${{ vars.AWS_REGION }}
  AWS_ACCOUNT_ID:         ${{ vars.AWS_ACCOUNT_ID }}
  BACKEND_BUCKET:         ${{ vars.BACKEND_BUCKET }}
  BACKEND_DYNAMODB_TABLE: ${{ vars.BACKEND_DYNAMODB_TABLE }}
  BUCKET_FRONT:           ${{ vars.BUCKET_FRONT }}
  DOMAIN_NAME:            ${{ vars.DOMAIN_NAME }}

jobs:
  # --------------------------- BUILD BACKEND ---------------------------
  build:
    runs-on: ubuntu-latest
    environment: DEV

    outputs:
      IMAGE_TAG: ${{ steps.build_image.outputs.IMAGE_TAG }}
      ECR_URL:   ${{ steps.build_image.outputs.ECR_URL }}

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ARN_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Make build script executable
        run: chmod +x cicd/scripts/build.sh

      - name: Build & push Docker image
        id: build_image
        run: ./cicd/scripts/build.sh

  # --------------------------- DEPLOY BACKEND AND FRONTEND ----------------------
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: DEV

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ARN_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      # ---------- TERRAFORM / TERRAGRUNT ----------
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.10.5"

      - name: Install Terragrunt
        uses: autero1/action-terragrunt@v3
        with:
          terragrunt-version: 0.80.4

      - name: Make deploy script executable
        run: chmod +x cicd/scripts/deploy.sh

      - name: Deploy infrastructure (Terragrunt)
        run: ./cicd/scripts/deploy.sh
        env:
          IMAGE_TAG: ${{ needs.build.outputs.IMAGE_TAG }}
          ECR_URL:   ${{ needs.build.outputs.ECR_URL }}

      # ---------- BUILD SPA ----------
      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Build SPA with real endpoint
        working-directory: frontend
        run: |
          echo "VITE_API_URL=$API_URL" > .env
          npm ci
          npm run build

      # ---------- DEPLOY TO S3 ----------
      - name: Upload SPA to S3
        run: |
          aws s3 sync frontend/dist "s3://${{ env.BUCKET_FRONT }}" --delete
        env:
          AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}
